// Code generated by MockGen. DO NOT EDIT.
// Source: validator.go

// Package mock_validation is a generated GoMock package.
package mock_validation

import (
	reflect "reflect"

	user "github.com/calmato/shs-web/api/proto/user"
	gomock "github.com/golang/mock/gomock"
)

// MockRequestValidation is a mock of RequestValidation interface.
type MockRequestValidation struct {
	ctrl     *gomock.Controller
	recorder *MockRequestValidationMockRecorder
}

// MockRequestValidationMockRecorder is the mock recorder for MockRequestValidation.
type MockRequestValidationMockRecorder struct {
	mock *MockRequestValidation
}

// NewMockRequestValidation creates a new mock instance.
func NewMockRequestValidation(ctrl *gomock.Controller) *MockRequestValidation {
	mock := &MockRequestValidation{ctrl: ctrl}
	mock.recorder = &MockRequestValidationMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRequestValidation) EXPECT() *MockRequestValidationMockRecorder {
	return m.recorder
}

// CreateTeacher mocks base method.
func (m *MockRequestValidation) CreateTeacher(req *user.CreateTeacherRequest) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateTeacher", req)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateTeacher indicates an expected call of CreateTeacher.
func (mr *MockRequestValidationMockRecorder) CreateTeacher(req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateTeacher", reflect.TypeOf((*MockRequestValidation)(nil).CreateTeacher), req)
}

// GetTeacher mocks base method.
func (m *MockRequestValidation) GetTeacher(req *user.GetTeacherRequest) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTeacher", req)
	ret0, _ := ret[0].(error)
	return ret0
}

// GetTeacher indicates an expected call of GetTeacher.
func (mr *MockRequestValidationMockRecorder) GetTeacher(req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTeacher", reflect.TypeOf((*MockRequestValidation)(nil).GetTeacher), req)
}

// ListTeachers mocks base method.
func (m *MockRequestValidation) ListTeachers(req *user.ListTeachersRequest) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListTeachers", req)
	ret0, _ := ret[0].(error)
	return ret0
}

// ListTeachers indicates an expected call of ListTeachers.
func (mr *MockRequestValidationMockRecorder) ListTeachers(req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListTeachers", reflect.TypeOf((*MockRequestValidation)(nil).ListTeachers), req)
}
