// Code generated by MockGen. DO NOT EDIT.
// Source: database.go

// Package mock_database is a generated GoMock package.
package mock_database

import (
	context "context"
	reflect "reflect"

	entity "github.com/calmato/shs-web/api/internal/user/entity"
	gomock "github.com/golang/mock/gomock"
)

// MockTeacher is a mock of Teacher interface.
type MockTeacher struct {
	ctrl     *gomock.Controller
	recorder *MockTeacherMockRecorder
}

// MockTeacherMockRecorder is the mock recorder for MockTeacher.
type MockTeacherMockRecorder struct {
	mock *MockTeacher
}

// NewMockTeacher creates a new mock instance.
func NewMockTeacher(ctrl *gomock.Controller) *MockTeacher {
	mock := &MockTeacher{ctrl: ctrl}
	mock.recorder = &MockTeacherMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTeacher) EXPECT() *MockTeacherMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockTeacher) Create(ctx context.Context, t *entity.Teacher) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", ctx, t)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create.
func (mr *MockTeacherMockRecorder) Create(ctx, t interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockTeacher)(nil).Create), ctx, t)
}
