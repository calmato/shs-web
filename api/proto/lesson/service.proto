syntax = "proto3";

package lesson;

option go_package = "github.com/calmato/shs-web/api/proto/lesson";

import "github.com/envoyproxy/protoc-gen-validate/validate/validate.proto";

import "lesson/common.proto";
import "lesson/shift.proto";
import "lesson/shift_summary.proto";
import "lesson/teacher_submission.proto";
import "lesson/teacher_shift.proto";

service LessonService {
  rpc ListShiftSummaries(ListShiftSummariesRequest) returns (ListShiftSummariesResponse);
  rpc GetShiftSummary(GetShiftSummaryRequest) returns (GetShiftSummaryResponse);
  rpc UpdateShiftSummarySchedule(UpdateShiftSummaryScheduleRequest) returns (UpdateShiftSummaryShceduleResponse);
  rpc DeleteShiftSummary(DeleteShiftSummaryRequest) returns (DeleteShiftSummaryResponse);
  rpc ListShifts(ListShiftsRequest) returns (ListShiftsResponse);
  rpc CreateShifts(CreateShiftsRequest) returns (CreateShiftsResponse);
  rpc ListTeacherSubmissionsByShiftSummaryIDs(ListTeacherSubmissionsByShiftSummaryIDsRequest) returns (ListTeacherSubmissionsByShiftSummaryIDsResponse);
  rpc UpsertTeacherShifts(UpsertTeacherShiftsRequest) returns (UpsertTeacherShiftsResponse);
}

message ListShiftSummariesRequest {
  enum OrderBy {
    ORDER_BY_YEAR_MONTH_NONE = 0;
    ORDER_BY_YEAR_MONTH_ASC  = 1;
    ORDER_BY_YEAR_MONTH_DESC = 2;
  }
  int64       limit    = 1 [(validate.rules).int64 = { gte: 0 }];
  int64       offset   = 2 [(validate.rules).int64 = { gte: 0 }];
  ShiftStatus status   = 3 [(validate.rules).enum = { defined_only: true }];
  OrderBy     order_by = 4 [(validate.rules).enum = { defined_only: true }];
}

message ListShiftSummariesResponse {
  repeated ShiftSummary summaries = 1;
  int64                 total     = 2;
}

message GetShiftSummaryRequest {
  int64 id = 1 [(validate.rules).int64 = { gt: 0 }];
}

message GetShiftSummaryResponse {
  ShiftSummary summary = 1;
}

message UpdateShiftSummaryScheduleRequest {
  int64 id      = 1 [(validate.rules).int64 = { gt: 0 }];
  int64 open_at = 2 [(validate.rules).int64 = { gt: 0 }];
  int64 end_at  = 3 [(validate.rules).int64 = { gt: 0 }];
}

message UpdateShiftSummaryShceduleResponse {}

message DeleteShiftSummaryRequest {
  int64 id = 1 [(validate.rules).int64 = { gt: 0 }];
}

message DeleteShiftSummaryResponse {}

message ListShiftsRequest {
  int64 shift_summary_id = 1 [(validate.rules).int64 = { gt: 0 }];
}

message ListShiftsResponse {
  repeated Shift shifts = 1;
}

message CreateShiftsRequest {
  int32           year_month   = 1 [(validate.rules).int32 = { gte: 100000, lt: 1000000 }];
  int64           open_at      = 2 [(validate.rules).int64 = { gt: 0 }];
  int64           end_at       = 3 [(validate.rules).int64 = { gt: 0 }];
  repeated string closed_dates = 4 [(validate.rules).repeated = { unique: true, items: { string: { len: 8, pattern: "^[0-9]*$" }}}];
}

message CreateShiftsResponse {
  ShiftSummary   summary = 1;
  repeated Shift shifts  = 2;
}

message ListTeacherSubmissionsByShiftSummaryIDsRequest {
  string         teacher_id        = 1 [(validate.rules).string = { min_len: 1 }];
  repeated int64 shift_summary_ids = 2 [(validate.rules).repeated = { unique: true, items: { int64: { gt: 0 }}}];
}

message ListTeacherSubmissionsByShiftSummaryIDsResponse {
  repeated TeacherSubmission submissions = 1;
}

message UpsertTeacherShiftsRequest {
  string         teacher_id       = 1 [(validate.rules).string = { min_len: 1 }];
  int64          shift_summary_id = 2 [(validate.rules).int64 = { gt: 0 }];
  repeated int64 shift_ids        = 3 [(validate.rules).repeated = { unique: true, items: { int64: { gt: 0 }}}];
  bool           decided          = 4;
}

message UpsertTeacherShiftsResponse {
  TeacherSubmission     submission = 1;
  repeated TeacherShift shifts     = 2;
}
