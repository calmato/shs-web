syntax = "proto3";

package user;

option go_package = "github.com/calmato/shs-web/api/proto/user";

import "github.com/envoyproxy/protoc-gen-validate/validate/validate.proto";

import "user/common.proto";
import "user/teacher.proto";
import "user/student.proto";

service UserService {
  rpc ListTeachers(ListTeachersRequest) returns (ListTeachersResponse);
  rpc MultiGetTeachers(MultiGetTeachersRequest) returns (MultiGetTeachersResponse);
  rpc GetTeacher(GetTeacherRequest) returns (GetTeacherResponse);
  rpc CreateTeacher(CreateTeacherRequest) returns (CreateTeacherResponse);
  rpc UpdateTeacherMail(UpdateTeacherMailRequest) returns (UpdateTeacherMailResponse);
  rpc UpdateTeacherPassword(UpdateTeacherPasswordRequest) returns (UpdateTeacherPasswordResponse);
  rpc UpdateTeacherRole(UpdateTeacherRoleRequest) returns (UpdateTeacherRoleResponse);
  rpc DeleteTeacher(DeleteTeacherRequest) returns (DeleteTeacherResponse);
  rpc ListStudents(ListStudentsRequest) returns (ListStudentsResponse);
  rpc MultiGetStudents(MultiGetStudentsRequest) returns (MultiGetStudentsResponse);
  rpc GetStudent(GetStudentRequest) returns (GetStudentResponse);
  rpc CreateStudent(CreateStudentRequest) returns (CreateStudentResponse);
  rpc UpdateStudentMail(UpdateStudentMailRequest) returns (UpdateStudentMailResponse);
  rpc UpdateStudentPassword(UpdateStudentPasswordRequest) returns (UpdateStudentPasswordResponse);
  rpc DeleteStudent(DeleteStudentRequest) returns (DeleteStudentResponse);
}

message ListTeachersRequest {
  int64 limit  = 1 [(validate.rules).int64 = { gte: 0 }];
  int64 offset = 2 [(validate.rules).int64 = { gte: 0 }];
}

message ListTeachersResponse {
  repeated Teacher teachers = 1;
  int64            total    = 2;
}

message MultiGetTeachersRequest {
  repeated string ids = 1 [(validate.rules).repeated = { unique: true, items: { string: { min_len: 1 }}}];
}

message MultiGetTeachersResponse {
  repeated Teacher teachers = 1;
}

message GetTeacherRequest {
  string id = 1 [(validate.rules).string = { min_len: 1 }];
}

message GetTeacherResponse {
  Teacher teacher = 1;
}

message CreateTeacherRequest {
  string last_name             = 1 [(validate.rules).string = { min_len: 1 max_len: 16 }];
  string first_name            = 2 [(validate.rules).string = { min_len: 1 max_len: 16 }];
  string last_name_kana        = 3 [(validate.rules).string = { min_len: 1 max_len: 32, pattern: "^[ぁ-ゔー]*$" }];
  string first_name_kana       = 4 [(validate.rules).string = { min_len: 1 max_len: 32, pattern: "^[ぁ-ゔー]*$" }];
  string mail                  = 5 [(validate.rules).string = { min_len: 1 max_len: 256 email: true }];
  Role   role                  = 6 [(validate.rules).enum = { defined_only: true }];
  string password              = 7 [(validate.rules).string = { min_len: 6 max_len: 32 pattern: "^[a-zA-Z0-9_!@#$_%^&*.?()-=+]*$" }];
  string password_confirmation = 8 [(validate.rules).string = { min_len: 1 }];
}

message CreateTeacherResponse {
  Teacher teacher = 1;
}

message UpdateTeacherMailRequest {
  string id   = 1 [(validate.rules).string = { min_len: 1 }];
  string mail = 2 [(validate.rules).string = { min_len: 1 max_len: 256 email: true }];
}

message UpdateTeacherMailResponse {}

message UpdateTeacherPasswordRequest {
  string id                    = 1 [(validate.rules).string = { min_len: 1 }];
  string password              = 2 [(validate.rules).string = { min_len: 6 max_len: 32 pattern: "^[a-zA-Z0-9_!@#$_%^&*.?()-=+]*$" }];
  string password_confirmation = 3 [(validate.rules).string = { min_len: 1 }];
}

message UpdateTeacherPasswordResponse {}

message UpdateTeacherRoleRequest {
  string id   = 1 [(validate.rules).string = { min_len: 1 }];
  Role   role = 2 [(validate.rules).enum = { defined_only: true }];
}

message UpdateTeacherRoleResponse {}

message DeleteTeacherRequest {
  string id = 1 [(validate.rules).string = { min_len: 1 }];
}

message DeleteTeacherResponse {}

message ListStudentsRequest {
  int64 limit  = 1 [(validate.rules).int64 = { gte: 0 }];
  int64 offset = 2 [(validate.rules).int64 = { gte: 0 }];
}

message ListStudentsResponse {
  repeated Student students = 1;
  int64            total    = 2;
}

message MultiGetStudentsRequest {
  repeated string ids = 1 [(validate.rules).repeated = { unique: true, items: { string: { min_len: 1 }}}];
}

message MultiGetStudentsResponse {
  repeated Student students = 1;
}

message GetStudentRequest {
  string id = 1 [(validate.rules).string = { min_len: 1 }];
}

message GetStudentResponse {
  Student student = 1;
}

message CreateStudentRequest {
  string last_name             = 1 [(validate.rules).string = { min_len: 1 max_len: 16 }];
  string first_name            = 2 [(validate.rules).string = { min_len: 1 max_len: 16 }];
  string last_name_kana        = 3 [(validate.rules).string = { min_len: 1 max_len: 32, pattern: "^[ぁ-ゔー]*$" }];
  string first_name_kana       = 4 [(validate.rules).string = { min_len: 1 max_len: 32, pattern: "^[ぁ-ゔー]*$" }];
  string mail                  = 5 [(validate.rules).string = { min_len: 1 max_len: 256 email: true }];
  string password              = 6 [(validate.rules).string = { min_len: 6 max_len: 32 pattern: "^[a-zA-Z0-9_!@#$_%^&*.?()-=+]*$" }];
  string password_confirmation = 7 [(validate.rules).string = { min_len: 1 }];
  SchoolType school_type       = 8 [(validate.rules).enum   = { defined_only: true }];
  int64 grade                  = 9 [(validate.rules).int64  = { gt: 0, lt: 7 }];
}

message CreateStudentResponse {
  Student student = 1;
}

message UpdateStudentMailRequest {
  string id   = 1 [(validate.rules).string = { min_len: 1 }];
  string mail = 2 [(validate.rules).string = { min_len: 1 max_len: 256 email: true }];
}

message UpdateStudentMailResponse {}

message UpdateStudentPasswordRequest {
  string id                    = 1 [(validate.rules).string = { min_len: 1 }];
  string password              = 2 [(validate.rules).string = { min_len: 6 max_len: 32 pattern: "^[a-zA-Z0-9_!@#$_%^&*.?()-=+]*$" }];
  string password_confirmation = 3 [(validate.rules).string = { min_len: 1 }];
}

message UpdateStudentPasswordResponse {}

message DeleteStudentRequest {
  string id = 1 [(validate.rules).string = { min_len: 1 }];
}

message DeleteStudentResponse {}
